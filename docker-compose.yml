services:
    nginx:
        container_name: light-diamond_nginx
        image: nginx
        expose:
            - 80
        restart: unless-stopped
        volumes:
            - ./:/var/www
            - ./docker/logs/nginx:/var/log/nginx
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
            - ./docker/nginx/nginx-template-variables.conf:/etc/nginx/templates/10-variables.conf.template:ro
        depends_on:
            - app
            - node-vite
        environment:
            APP_URL: ${APP_URL}
            VIRTUAL_HOST: ${APP_HOST:-localhost,lightdiamond.local}
            LETSENCRYPT_HOST: ${APP_HOST}

    nginx-proxy:
        container_name: light-diamond_nginx-proxy
        image: nginxproxy/nginx-proxy:1.7
        ports:
            - "${HTTP_PORT:-80}:${HTTP_PORT:-80}"
            - "443:443"
        restart: unless-stopped
        volumes:
            - ./docker/nginx/html:/usr/share/nginx/html
            - ./docker/nginx/certs:/etc/nginx/certs:ro
            - ./docker/nginx/nginx-proxy-overrides.conf:/etc/nginx/conf.d/nginx-proxy-overrides.conf
            - /var/run/docker.sock:/tmp/docker.sock:ro
        environment:
            TRUST_DOWNSTREAM_PROXY: false
            HTTP_PORT: ${HTTP_PORT:-80}

    acme-companion:
        container_name: light-diamond_nginx-proxy-acme
        image: nginxproxy/acme-companion:2.5
        restart: unless-stopped
        volumes_from:
            - nginx-proxy
        volumes:
            - ./docker/nginx/certs:/etc/nginx/certs:rw
            - ./docker/nginx/acme:/etc/acme.sh
            - /var/run/docker.sock:/var/run/docker.sock:ro

    app:
        container_name: light-diamond_app
        build:
            context: .
            dockerfile: docker/app/Dockerfile
        restart: unless-stopped
        volumes:
            - ./:/var/www
            - ./docker/app/php.ini:/usr/local/etc/php/php.ini:ro
        depends_on:
            postgres:
                condition: service_healthy

    app-worker:
        container_name: light-diamond_app-worker
        build:
            context: .
            dockerfile: docker/app/Dockerfile
        restart: unless-stopped
        volumes_from:
            - app
        command: php artisan schedule:work
        depends_on:
            - app

    postgres:
        container_name: light-diamond_postgres
        image: postgres:17
        ports:
            - ${DB_PORT}:5432
        restart: unless-stopped
        volumes:
            - ./docker/data/postgres:/var/lib/postgresql/data
            - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}'" ]
            interval: 5s
            timeout: 3s
            retries: 10

    node-vite:
        container_name: light-diamond_node-vite
        image: node:22-alpine
        ports:
            - ${VITE_PORT}:5173
        volumes:
            - ./:/var/www
        working_dir: /var/www
        command: sh -c 'if [ "${APP_DEBUG}" = "true" ]; then npm run dev; else npm run build; fi'

    mailpit:
        container_name: light-diamond_mailpit
        build:
            context: .
            dockerfile: docker/mailpit/Dockerfile
        ports:
            - "8025:8025"
            - "1025:1025"
        environment:
            MP_SMTP_AUTH_ALLOW_INSECURE: 1
        command: ash -c 'if [ "${APP_DEBUG}" = "true" ]; then /mailpit; fi'
